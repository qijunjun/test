<?php
/**
 * Created by PhpStorm.
 * User: Yu
 * Date: 2016/8/24
 * Time: 17:53
 */

namespace Statistic\Controller;


use Common\Controller\BaseController;
use Statistic\API\CompanyAPI;

class CompanyController extends BaseController
{
    protected function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $this->companyid = session("user_info.companyid");
    }

    private $companyid;

    public function fetchInfo()
    {
        $companyid=I("companyid");
        if(!empty($companyid))$this->companyid=$companyid;
        $result = CompanyAPI::fetchInfo($this->companyid);
        json("001", $result);
    }

    public function updateData()
    {
        $companyid=I("companyid");
        if(!empty($companyid))$this->companyid=$companyid;
        $this->getProductCounts();
        $this->getQrcodeBoughtCounts();
        $this->getQrcodeUsedCounts();
        $this->getQrcodeJoinedCounts();
        $this->getQrcodeCheckinCounts();
        $this->getQrcodeCheckoutCounts();
        $this->getQrcodeScanedCounts();
        $this->getQrcodeTipoffCounts();
    }

    public function getProductCounts()
    {
        $companyid=I("companyid");
        if(!empty($companyid))$this->companyid=$companyid;
        $result = CompanyAPI::getProductCounts($this->companyid);
        if($result>0)
        {
            $data["company_id"]=$this->companyid;
            $data["product_count"]=$result;
            CompanyAPI::saveData($data);
        }
        json("001", $result);
    }

    public function getQrcodeBoughtCounts()
    {
        $companyid=I("companyid");
        if(!empty($companyid))$this->companyid=$companyid;
        $result = CompanyAPI::getQrcodeBoughtCounts($this->companyid);
        if($result>0)
        {
            $data["company_id"]=$this->companyid;
            $data["qrcode_bought_count"]=$result;
            CompanyAPI::saveData($data);
        }
        json("001", $result);
    }

    public function getQrcodeUsedCounts()
    {
        $companyid=I("companyid");
        if(!empty($companyid))$this->companyid=$companyid;
        $result = CompanyAPI::getQrcodeUsedCounts($this->companyid);
        if($result>0)
        {
            $data["company_id"]=$this->companyid;
            $data["qrcode_used_counts"]=$result;
            CompanyAPI::saveData($data);
        }
        json("001", $result);
    }

    public function getQrcodeCheckinCounts()
    {
        $companyid=I("companyid");
        if(!empty($companyid))$this->companyid=$companyid;
        $result = CompanyAPI::getQrcodeCheckinCounts($this->companyid);
        if($result>0)
        {
            $data["company_id"]=$this->companyid;
            $data["qrcode_checkin_counts"]=$result;
            CompanyAPI::saveData($data);
        }
        json("001", $result);
    }
    public function getQrcodeCheckoutCounts()
    {
        $companyid=I("companyid");
        if(!empty($companyid))$this->companyid=$companyid;
        $result = CompanyAPI::getQrcodeCheckoutCounts($this->companyid);
        if($result>0)
        {
            $data["company_id"]=$this->companyid;
            $data["qrcode_checkout_counts"]=$result;
            CompanyAPI::saveData($data);
        }
        json("001", $result);
    }

    public function getQrcodeJoinedCounts()
    {
        $companyid=I("companyid");
        if(!empty($companyid))$this->companyid=$companyid;
        $result = CompanyAPI::getQrcodeJoinedCounts($this->companyid);
        if($result>0)
        {
            $data["company_id"]=$this->companyid;
            $data["qrcode_joined_counts"]=$result;
            CompanyAPI::saveData($data);
        }
        json("001", $result);
    }

    public function getQrcodeScanedCounts()
    {
        $companyid=I("companyid");
        if(!empty($companyid))$this->companyid=$companyid;
        $result = CompanyAPI::getQrcodeScanedCounts($this->companyid);
        if($result>0)
        {
            $data["company_id"]=$this->companyid;
            $data["qrcode_scaned_counts"]=$result;
            CompanyAPI::saveData($data);
        }
        json("001", $result);
    }

    public function getQrcodeTipoffCounts()
    {
        $companyid=I("companyid");
        if(!empty($companyid))$this->companyid=$companyid;
        $result = CompanyAPI::getQrcodeTipoffCounts($this->companyid);
        if($result>0)
        {
            $data["company_id"]=$this->companyid;
            $data["qrcode_tipoff_counts"]=$result;
            CompanyAPI::saveData($data);
        }
        json("001", $result);
    }

}